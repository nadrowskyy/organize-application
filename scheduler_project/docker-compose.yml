version: "3.8"

services:

#  rabbitmq:
#    container_name: rabbitmq
#    hostname: rabbitmq
#    image: rabbitmq:latest
#    networks:
#      - main
#    ports:
#      - "5672:5672"
#    restart: on-failure



  organize-application:
    build: .
    command: python manage.py runserver 0.0.0.0:80
    container_name: organize-application
    depends_on:
      - mysql
#      - rabbitmq
    ports:
      - "80:80"
    hostname: organize-application
    restart: on-failure
    volumes:
      - .:/usr/src/organize-application/scheduler_project
      
  mysql:
    container_name: mysql
    image: mysql
    ports:
      - '3306:3306'
    environment:
         - MYSQL_DATABASE='scheduler_database'
         - MYSQL_ROOT_PASSWORD=''
    restart: on-failure

#  celery_worker:
#    command: sh -c "celery -A organize-application worker -l info --pool=solo"
#    container_name: celery_worker
#    depends_on:
#      - organize-application
#      - mysql
#      - rabbitmq
#    deploy:
#      replicas: 2
#      restart_policy:
#        condition: on-failure
#      resources:
#        limits:
#          cpus: '0.50'
#          memory: 50M
#        reservations:
#          cpus: '0.25'
#          memory: 20M
#    hostname: celery_worker
#    image: app-image
#    networks:
#      - main
#    restart: on-failure

#  celery_beat:
#    command: sh -c "celery -A organize-application beat -l INFO"
#    container_name: celery_beat
#    depends_on:
#      - organize-application
#      - mysql
#      - rabbitmq
#    hostname: celery_beat
#    image: app-image
#   networks:
#      - main
#    restart: on-failure
