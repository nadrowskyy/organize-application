version: '3.4'

services:

  rabbitmq:
    container_name: rabbitmq
    hostname: rabbitmq
    image: rabbitmq:latest
    networks:
      - main
    ports:
      - "5672:5672"
    restart: on-failure

  mariadb:
    container_name: mariadb
    hostname: mariadb
   image: mysql:5.7
    ports:
      - '3306:3306'
    environment:
       MYSQL_DATABASE: 'scheduler_database'
       MYSQL_USER: 'root'
    networks:
      - main
    restart: on-failure

  organize-application:
    build: .
    command: sh -c "python manage.py collectstatic --no-input && python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:80"
    container_name: organize-application
    depends_on:
      - mysql
      - rabbitmq
    expose:
      - "80"
    hostname: organize-application
    networks:
      - main
    restart: on-failure
    image: app-image
    volumes:
      - .:/usr/src/organize-application/scheduler_project

  celery_worker:
    command: sh -c "celery -A scheduler_project worker -l info --pool=solo"
    container_name: celery_worker
    depends_on:
      - app
      - mariadb
      - rabbitmq
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: '0.50'
          memory: 50M
        reservations:
          cpus: '0.25'
          memory: 20M
    hostname: celery_worker
    image: app-image
    networks:
      - main
    restart: on-failure

  celery_beat:
    command: sh -c "celery -A scheduler_project beat -l INFO"
    container_name: celery_beat
    depends_on:
      - app
      - mariadb
      - rabbitmq
    hostname: celery_beat
    image: app-image
    networks:
      - main
    restart: on-failure

networks:
  main:
